services:
  # PostgreSQL Database Service
  db:
    image: postgres:13
    container_name: database
    restart: always
    env_file:
      - backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_3:/var/lib/postgresql/data
    networks:
      - mynet

  # Adminer Service (Database Management Tool)
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - mynet

  # Backend Service
  backend:
    build: ./backend
    container_name: backend
    command: ["poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - 8000:8000
    depends_on:
      - db # Ensure the database service is started before backend
    env_file:
      - backend/.env # Environment variables for the backend
    networks:
      - mynet

  # Frontend Service
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - 4173:80
    env_file:
      - frontend/.env # Environment variables for the frontend
    networks:
      - mynet

  # Nginx Proxy Manager Service
  nginx:
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      # Public HTTP Port:
      - "80:80"
      # Public HTTPS Port:
      - "443:443"
      # Admin Web Port:
      - "81:81"
    env_file:
      - backend/.env
    volumes:
      # Make sure this config file exists in the same directory as your docker-compose.yml
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend # Ensure frontend service is started before nginx
      - backend # Ensure backend service is started before nginx
      - adminer # Ensure adminer service is started before nginx
    networks:
      - mynet
   

# Define named volumes for persistent data storage
volumes:
  postgres_data_3:

# Define custom network for inter-service communication
networks:
  mynet:



